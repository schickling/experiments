function init(){setupEnv(),initListener(),build()}function build(){createCube(),createMovingBalls(),createHiddenRandomPoints(),createTree()}function animate(){requestAnimationFrame(animate),rotateCamera(),moveBalls(),renderer.render(scene,camera)}function createCube(){var a=new THREE.CubeGeometry(cubeLength,cubeLength,cubeLength),b=new THREE.MeshBasicMaterial({color:10724259,wireframe:!0,wireframeLinewidth:1}),c=new THREE.Mesh(a,b);scene.add(c)}function createMovingBalls(){for(var a=new THREE.SphereGeometry(ballRadius,30,30),b=0;numberOfBalls>b;b++){var c=new THREE.MeshBasicMaterial({color:Math.floor(16777215*Math.random())}),d=new THREE.Mesh(a,c),e={sphere:d,activePoints:[],activeLines:[],xSpeed:Math.random()-.5,ySpeed:Math.random()-.5,zSpeed:Math.random()-.5};d.position.x=getRandomValue(),d.position.y=getRandomValue(),d.position.z=getRandomValue(),scene.add(d),balls.push(e)}}function createHiddenRandomPoints(){for(var a=new THREE.SphereGeometry(pointRadius,10,10),b=new THREE.MeshBasicMaterial({color:Math.floor(16777215*Math.random())}),c=0;numberOfPoints>c;c++){var d=new THREE.Mesh(a,b),e={sphere:d,id:c};d.position.x=getRandomValue(),d.position.y=getRandomValue(),d.position.z=getRandomValue(),d.visible=!1,scene.add(d),points.push(e)}}function createTree(){tree=new kdTree(points,distance,["x","y","z"])}function rotateCamera(){deg=(deg+.4)%360,camera.position.x=300*Math.cos(deg*Math.PI/180),camera.position.z=300*Math.sin(deg*Math.PI/180),camera.lookAt(new THREE.Vector3(0,0,0))}function moveBalls(){balls.forEach(function(a){var b=a.sphere.position;b.x+=a.xSpeed*speed,b.y+=a.ySpeed*speed,b.z+=a.zSpeed*speed,Math.abs(b.x)>cubeLength/2&&(a.xSpeed*=-1),Math.abs(b.y)>cubeLength/2&&(a.ySpeed*=-1),Math.abs(b.z)>cubeLength/2&&(a.zSpeed*=-1),showKNearestPointsForBall(a)})}function showKNearestPointsForBall(a){a.activePoints.forEach(function(a){a.sphere.visible=!1}),a.activePoints=[],a.activeLines.forEach(function(a){scene.remove(a)}),a.activeLines=[];var b=findNearest(a);b.forEach(function(b){var c=b[0];if(!c.sphere.visible){c.sphere.visible=!0,c.sphere.material=a.sphere.material,a.activePoints.push(c);var d=new THREE.LineBasicMaterial;d.color=a.sphere.material.color;var e=new THREE.Geometry;e.vertices.push(a.sphere.position),e.vertices.push(c.sphere.position);var f=new THREE.Line(e,d);scene.add(f),a.activeLines.push(f)}})}function distance(a,b){if(!a.hasOwnProperty("sphere"))return 0;var c=a.sphere.position.x-b.sphere.position.x,d=a.sphere.position.y-b.sphere.position.y,e=a.sphere.position.z-b.sphere.position.z;return c*c+d*d+e*e}function findNearest(a){return tree.nearest(a,k)}function getRandomValue(){return Math.random()*cubeLength-cubeLength/2}function setupEnv(){renderer=new THREE.WebGLRenderer,renderer.setSize(width,height),document.body.appendChild(renderer.domElement),window.addEventListener("resize",onWindowResize,!1),camera=new THREE.PerspectiveCamera(90,width/height,1,1e3),scene=new THREE.Scene,loadVariables()}function initListener(){$("input").change(function(){reset(),setupEnv(),build()})}function reset(){balls=[],points=[],$("canvas").remove()}function loadVariables(){k=parseInt($("#k").val(),10),numberOfBalls=parseInt($("#numberOfBalls").val(),10),numberOfPoints=parseInt($("#numberOfPoints").val(),10)}function onWindowResize(){camera.aspect=width/height,camera.updateProjectionMatrix(),renderer.setSize(width,height)}!function(){function a(a,b,c){this.obj=a,this.left=null,this.right=null,this.parent=c,this.dimension=b}function b(b,d,e){function f(b,c,d){var g,h,i=c%e.length;return 0===b.length?null:1===b.length?new a(b[0],i,d):(b.sort(function(a,b){return a[e[i]]-b[e[i]]}),g=Math.floor(b.length/2),h=new a(b[g],i,d),h.left=f(b.slice(0,g),c+1,h),h.right=f(b.slice(g+1),c+1,h),h)}function g(a){function b(a){a.left&&(a.left.parent=a,b(a.left)),a.right&&(a.right.parent=a,b(a.right))}h.root=a,b(h.root)}var h=this;Array.isArray(b)?this.root=f(b,0,null):g(b,d,e),this.toJSON=function(b){b||(b=this.root);var c=new a(b.obj,b.dimension,null);return b.left&&(c.left=h.toJSON(b.left)),b.right&&(c.right=h.toJSON(b.right)),c},this.insert=function(b){function c(a,d){if(null===a)return d;var f=e[a.dimension];return b[f]<a.obj[f]?c(a.left,a):c(a.right,a)}var d,f,g=c(this.root,null);return null===g?(this.root=new a(b,0,null),void 0):(d=new a(b,(g.dimension+1)%e.length,g),f=e[g.dimension],b[f]<g.obj[f]?g.left=d:g.right=d,void 0)},this.remove=function(a){function b(c){if(null===c)return null;if(c.obj===a)return c;var d=e[c.dimension];return a[d]<c.obj[d]?b(c.left,c):b(c.right,c)}function c(a){function b(a,c){var d,f,g,h,i;return null===a?null:(d=e[c],a.dimension===c?null!==a.right?b(a.right,c):a:(f=a.obj[d],g=b(a.left,c),h=b(a.right,c),i=a,null!==g&&g.obj[d]>f&&(i=g),null!==h&&h.obj[d]>i.obj[d]&&(i=h),i))}function d(a,b){var c,f,g,h,i;return null===a?null:(c=e[b],a.dimension===b?null!==a.left?d(a.left,b):a:(f=a.obj[c],g=d(a.left,b),h=d(a.right,b),i=a,null!==g&&g.obj[c]<f&&(i=g),null!==h&&h.obj[c]<i.obj[c]&&(i=h),i))}var f,g,i;return null===a.left&&null===a.right?null===a.parent?(h.root=null,void 0):(i=e[a.parent.dimension],a.obj[i]<a.parent.obj[i]?a.parent.left=null:a.parent.right=null,void 0):(f=null!==a.left?b(a.left,a.dimension):d(a.right,a.dimension),g=f.obj,c(f),a.obj=g,void 0)}var d;d=b(h.root),null!==d&&c(d)},this.nearest=function(a,b,f){function g(c){function f(a,c){k.push([a,c]),k.size()>b&&k.pop()}var h,i,j,l,m=e[c.dimension],n=d(a,c.obj),o={};for(l=0;l<e.length;l+=1)o[e[l]]=l===c.dimension?a[e[l]]:c.obj[e[l]];return i=d(o,c.obj),null===c.right&&null===c.left?((k.size()<b||n<k.peek()[1])&&f(c,n),void 0):(h=null===c.right?c.left:null===c.left?c.right:a[m]<c.obj[m]?c.left:c.right,g(h),(k.size()<b||n<k.peek()[1])&&f(c,n),(k.size()<b||Math.abs(i)<k.peek()[1])&&(j=h===c.left?c.right:c.left,null!==j&&g(j)),void 0)}var i,j,k;if(k=new c(function(a){return-a[1]}),f)for(i=0;b>i;i+=1)k.push([null,f]);for(g(h.root),j=[],i=0;b>i;i+=1)k.content[i][0]&&j.push([k.content[i][0].obj,k.content[i][1]]);return j},this.balanceFactor=function(){function a(b){return null===b?0:Math.max(a(b.left),a(b.right))+1}function b(a){return null===a?0:b(a.left)+b(a.right)+1}return a(h.root)/(Math.log(b(h.root))/Math.log(2))}}function c(a){this.content=[],this.scoreFunction=a}c.prototype={push:function(a){this.content.push(a),this.bubbleUp(this.content.length-1)},pop:function(){var a=this.content[0],b=this.content.pop();return this.content.length>0&&(this.content[0]=b,this.sinkDown(0)),a},peek:function(){return this.content[0]},remove:function(a){for(var b=this.content.length,c=0;b>c;c++)if(this.content[c]==a){var d=this.content.pop();return c!=b-1&&(this.content[c]=d,this.scoreFunction(d)<this.scoreFunction(a)?this.bubbleUp(c):this.sinkDown(c)),void 0}throw new Error("Node not found.")},size:function(){return this.content.length},bubbleUp:function(a){for(var b=this.content[a];a>0;){var c=Math.floor((a+1)/2)-1,d=this.content[c];if(!(this.scoreFunction(b)<this.scoreFunction(d)))break;this.content[c]=b,this.content[a]=d,a=c}},sinkDown:function(a){for(var b=this.content.length,c=this.content[a],d=this.scoreFunction(c);;){var e=2*(a+1),f=e-1,g=null;if(b>f){var h=this.content[f],i=this.scoreFunction(h);d>i&&(g=f)}if(b>e){var j=this.content[e],k=this.scoreFunction(j);(null==g?d:i)>k&&(g=e)}if(null==g)break;this.content[a]=this.content[g],this.content[g]=c,a=g}}},this.kdTree=b,"undefined"!=typeof exports&&(exports.kdTree=b,exports.BinaryHeap=c)}();var width=window.innerWidth,height=window.innerHeight,cubeLength=250,deg=0,speed=10,balls=[],ballRadius=6,points=[],pointRadius=2,k,numberOfBalls,numberOfPoints,camera,scene,renderer,tree;init(),animate();